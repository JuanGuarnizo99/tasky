{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\OneDrive\\\\Desktop\\\\tasky\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport ListHeader from \"./components/ListHeader\";\nimport ListItem from \"./components/ListItem\";\nimport Auth from \"./components/Auth\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //states\n  const [tasks, setTasks] = useState([]);\n  const userEmail = \"juansito@gmail.com\";\n  const authToken = false;\n\n  //function to get data from db\n  const getData = async () => {\n    //Ask for the data to the backend\n    await fetch(`${process.env.REACT_APP_SERVERURL}/todos/${userEmail}`).then(response => response.json()).then(data => {\n      setTasks(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  useEffect(() => {\n    if (authToken) {\n      getData();\n    }\n  }, []);\n  console.log(tasks);\n\n  //Sort by date  \n  const sortedTasks = tasks === null || tasks === void 0 ? void 0 : tasks.sort((a, b) => new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!authToken && /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this), authToken && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n        listName: \" 👨🏻‍💻 CS tick list\",\n        getData: getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), sortedTasks === null || sortedTasks === void 0 ? void 0 : sortedTasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        task: task,\n        getData: getData\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 36\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ListHeader","ListItem","Auth","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","userEmail","authToken","getData","fetch","process","env","REACT_APP_SERVERURL","then","response","json","data","catch","error","console","log","sortedTasks","sort","a","b","Date","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","listName","map","task","id","_c","$RefreshReg$"],"sources":["C:/Users/Juan/OneDrive/Desktop/tasky/client/src/App.js"],"sourcesContent":["import ListHeader from \"./components/ListHeader\";\r\nimport ListItem from \"./components/ListItem\";\r\nimport Auth from \"./components/Auth\";\r\nimport {useEffect, useState} from 'react';\r\n\r\nconst App = ()=> {\r\n  //states\r\n  const [tasks, setTasks] = useState([]);\r\n  const userEmail = \"juansito@gmail.com\";\r\n\r\n  const authToken = false;\r\n\r\n\r\n  //function to get data from db\r\n  const getData = async () => {\r\n    //Ask for the data to the backend\r\n    await fetch(`${process.env.REACT_APP_SERVERURL}/todos/${userEmail}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTasks(data);\r\n    })\r\n    .catch(error =>{\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  \r\n  useEffect(()=> {\r\n    if(authToken){\r\n      getData();\r\n    }\r\n  }, []); \r\n\r\n  console.log(tasks);\r\n\r\n  //Sort by date  \r\n  const sortedTasks = tasks?.sort((a,b)=> (new Date(a.date)) - (new Date(b.date)));\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n      {!authToken && <Auth></Auth>}\r\n      {/* Only shows if auth token exists */}\r\n      {authToken &&\r\n      <>\r\n        <ListHeader listName={\" 👨🏻‍💻 CS tick list\"} getData={getData}/>\r\n        {sortedTasks?.map((task) =><ListItem key={task.id} task={task} getData={getData}/>)}\r\n      </>}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,SAAS,GAAG,oBAAoB;EAEtC,MAAMC,SAAS,GAAG,KAAK;;EAGvB;EACA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B;IACA,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,UAASN,SAAU,EAAC,CAAC,CACnEO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZX,QAAQ,CAACW,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAG;MACbC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC;EAGDtB,SAAS,CAAC,MAAK;IACb,IAAGW,SAAS,EAAC;MACXC,OAAO,CAAC,CAAC;IACX;EACF,CAAC,EAAE,EAAE,CAAC;EAENW,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;;EAElB;EACA,MAAMiB,WAAW,GAAGjB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEkB,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,GAAK,IAAID,IAAI,CAACD,CAAC,CAACE,IAAI,CAAE,CAAC;EAEhF,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,GAEjB,CAACrB,SAAS,iBAAIR,OAAA,CAACJ,IAAI;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAE3BzB,SAAS,iBACVR,OAAA,CAAAE,SAAA;MAAA2B,QAAA,gBACE7B,OAAA,CAACN,UAAU;QAACwC,QAAQ,EAAE,uBAAwB;QAACzB,OAAO,EAAEA;MAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACjEX,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEa,GAAG,CAAEC,IAAI,iBAAIpC,OAAA,CAACL,QAAQ;QAAeyC,IAAI,EAAEA,IAAK;QAAC3B,OAAO,EAAEA;MAAQ,GAAtC2B,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAAC,CAAC;IAAA,eACnF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEV,CAAC;AAAA7B,EAAA,CA9CKD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}